@page "/agency"

@inject HttpClient Http
@code {
    private List<AgencyDto> agencies;

    protected override async Task OnInitializedAsync()
    {
        agencies = await Http.GetFromJsonAsync<List<AgencyDto>>("https://localhost:7078/api/Agency");
    }

    public class AgencyDto
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Presentation { get; set; }
        public string LogoUrl { get; set; }
        public List<BrokerDto> Brokers { get; set; }
    }

    public class BrokerDto
    {
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public string PhoneNumber { get; set; }
        public string ImageUrl { get; set; }
    }
}

<h3>Agencies</h3>

@if (agencies != null)
{
    foreach (var agency in agencies)
    {
        <div>
            <h4>@agency.Name</h4>
            <p>@agency.Presentation</p>
            <img src="@agency.LogoUrl" alt="@agency.Name" />

            <h5>Brokers:</h5>
            @if (agency.Brokers != null && agency.Brokers.Any())
            {
                <ul>
                    @foreach (var broker in agency.Brokers)
                    {
                        <li>
                            <strong>@broker.FirstName @broker.LastName</strong>
                            <p>Email: @broker.Email</p>
                            <p>Phone: @broker.PhoneNumber</p>
                            @if (!string.IsNullOrEmpty(broker.ImageUrl))
                            {
                                <img src="@broker.ImageUrl" alt="@broker.FirstName @broker.LastName" />
                            }
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No brokers available for this agency.</p>
            }
        </div>
        <hr />
    }
}
else
{
    <p>Loading...</p>
}
